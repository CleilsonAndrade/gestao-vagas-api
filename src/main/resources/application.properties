# JWT
security.token= "eyJhbGciOiJIUzI1NiJ9.eyJJc3N1ZXIiOiJjbGVpbHNvbmFuZHJhZGUiLCJleHAiOjE2OTkyODc3NTcsImlhdCI6MTY5OTI4Nzc1N30.dib1N8tlKtMufq17pSBUL2TIZepfHd9tfs-WGwcm76E"
security.token.secret.candidate=eyJhbGciOiJIUzI1NiJ9.eyJJc3N1ZXIiOiJjbGVpbHNvbmFuZHJhZGUiLCJleHAiOjE2OTkyODc3NTcsImlhdCI6MTY5OTI4Nzc1N30.dib1N8tlKtMufq17pSBUL2TIZepfHd9tfs-WGwcm76E

# PostgreSQL
# spring.datasource.url=jdbc:postgresql://localhost:5432/gestao_vagas_db
# spring.datasource.username=admin
# spring.datasource.password=admin

# MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/gestao_vagas_db
spring.datasource.username=root
spring.datasource.password=Meteoro@10

# JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false

# Generate database script
# spring.jpa.properties.jakarta.persistence.schema-generation.create-source=metadata
# spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=create.sql
# spring.jpa.properties.hibernate.hbm2ddl.delimiter=;
